export const BAREAR: string = 'Bearer',
  USER_REQUEST_KEY: string = 'user',
  WELCOME_MESSAGE = 'Welcome to the NestJS backend Google Sheets API',
  SWAGGER_API_TITLE: string = 'NestJS backend Google Sheets API',
  GOOGLE_DRIVE_REDIRECT_URL: string =
    'https://developers.google.com/oauthplayground',
  FILE_ID: string = 'fileId',
  GOOGLE_DRIVE_BASE_URL: string = `https://drive.google.com/file/d/${FILE_ID}`,
  GDRIVE_AUTH_URL: string = 'https://www.googleapis.com/auth/drive',
  GOOGLE_DRIVE_PREVIEW_URL: string = `${GOOGLE_DRIVE_BASE_URL}/preview`,
  GOOGLE_DRIVE_VIEW_URL: string = `${GOOGLE_DRIVE_BASE_URL}/view`,
  SWAGGER_API_DESCRIPTION: string =
    'Welcome to the super cool NestJS backend Google Sheets API! ðŸš€ You can read, write, update, and delete data from Google Sheets. How cool is that? ðŸ˜Ž',
  SWAGGER_API_VERSION: string = '1.0',
  SWAGGER_API_TAG: string = 'Google Sheets',
  SWAGGER_API_ENDPOINT = 'api',
  TEST_ENDPOINTS_MESSAGE = `<b>Ready to test the <b>endpoints</b>? visit the <b>Swagger UI</b> right here <a href="/${SWAGGER_API_ENDPOINT}">/${SWAGGER_API_ENDPOINT}</a> and let's get started! ðŸŽ‰</br>
@see <a href="https://docs.nestjs.com/openapi/introduction">NestJS Swagger documentation ðŸš€</a> for more information`,
  PORT_KEY: string = 'PORT',
  DEFAULT_PORT: string = '8080',
  INTERNAL_SERVER_ERROR: string = 'Internal Server Error',
  GSHEETS_API_VERSION = 'v4',
  GSHEETS_AUTH_URL: string = 'https://www.googleapis.com/auth/spreadsheets',
  DEFAULT_RANGE: string = '1:1000', //first 1000 rows
  ROW: string = 'ROW',
  NO_DATA_IN_RANGE: string = 'No data found in that range',
  SHEET_NOT_FOUND: string = 'Sheet not found',
  UPDATED_SUCCESSFULLY: string = 'updated successfully',
  DELETED_SUCCESSFULLY: string = 'deleted successfully',
  ADDED_SUCCESSFULLY: string = 'added successfully',
  MISSING_GSHETS_PARAMS: string =
    'Missing required parameters [spreadsheetId, range, data] make sure to pass all required parameters',
  ALREADY_EXISTS: string = 'already exists',
  INVALID_PASSWORD: string = 'Invalid password',
  INCORRECT_PASSWORD: string = 'Incorrect password',
  REQUIRED_FIELD: string = 'required field',
  PASSWORD_REG = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/,
  EXISTS_USER: string = 'User already exists with that username or rowNumber',
  USER_NOT_FOUND: string = 'User not found',
  DELETE_USERS_SUCCESS: string = 'All users deleted successfully',
  USER_NOT_LOGGED_IN: string = 'User not logged in',
  USER_LOGGED_OUT: string = 'User logged out';
